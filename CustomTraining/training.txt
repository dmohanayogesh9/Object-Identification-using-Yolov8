
1. pip install simple_image_download==0.4
    change keyword in the download_images.py as per requirement

2. pip install labelImg # for labeling the images

3. labelImg # enter this in cmd 
    file -> open dir(file that contains all img's)
    file -> change save dir(to store img with labels)
    check that it is set to yolo
    select rectBox and add bounding boxes to all images

4. seperate the train and test data set

5. add classes.txt to root folder

6. create test folder inside it create images and label folder
    move few(approx 20%) of images and labels to test
    and remaining to train

7. create data_coustom.yaml file
    /*
    train: ./train
    val: ./test

    nc: 2 # no. of classes

    names: ["item1","item2"] # indexing based on classes.txt
    */

8. Download Required packages
    pip install ultralytics
    pip3 install --upgrade torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu117

9. train the model with 
    yolo task=detect mode=train epochs=100 data=data_custom.yaml model=yolov8n.pt imgsz=640
    if you getting errors give complete path of foler in data_coustom.yaml
    /*
    train: ./train # update train and val accordingly
    val: ./test

    nc: 2 # no. of classes

    names: ["item1","item2"] # indexing based on classes.txt
    */

10. results will be shown in run/detect/train
    we will have out trained model in weights folder
    if it gives cuda out error keep small batch number 4 or 8
/* train using python script
from ultralytics import YOLO

# Load a model
model = YOLO("yolov8n.pt")  # load a pretrained model (recommended for training)

# Train the model
results = model.train(data="data_coustom.yaml", batch=8 ,epochs=100, imgsz=640)
*/

11. yolo task=detect mode=predict model=yolov8.pt show=True source="" line_thickness=1 
    for thickness of bounding boxes
    hide_labels=True # to hide labels
    hide_conf=True #to hide confidences
    classes=[0] # based on classes.txt to detect only specific class

12. to export into other form 
    yolo task=detect mode=export model=yolov9n.pt format=omnx

13. to run the coustom model in python file
    /*
    from ultralytics import YOLO
    model = YOLO("best.pt")
    model.predict(source="1.jpeg", show=True, save=True, conf=0.5)
    */
